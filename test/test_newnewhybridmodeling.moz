/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

Author: Oscar Eriksson oerikss@kth.se
*/

include NewNewHybridModeling

def testThunk() = {
    def label = "Thunk";
    def _ = println("test: " ++ label);
    def f(x:()) = {
        def x: Real;
        1. + x  
    };
    def _ = dprint(f);
    def _ = dprint(f ());
    println("end test: " ++ label ++ "\n");
}

def testGs2g() = {
    def label = "Gs2g";     
    def _ = println("test: " ++ label);
    def _ = dprint(gs2g (false, 0.) (false, 1.));
    def _ = dprint(gs2g (true, 1.) (false, e));
    def _ = dprint(gs2g (false, 1.) (true, 2.));
    def _ = dprint(gs2g (false, e) (false, 3.));
    def _ = dprint(gs2g (false, 4.) (false, e));
    def _ = dprint(gs2g (false, e) (false, e));
    // errors
    //def _ = dprint(gs2g (true, 1.) (true, 2.));
    println("end test: " ++ label ++ "\n");
}

def main = {
    def _ = println("=== tests start ===");
    def _ = testThunk();
    def _ = testGs2g();
    println("=== tests end ===")
}
