include MBMLANG

def world, f_1, f_2, f_3, f_4: Frame

def m = 1.
def I = (1., 1., 1.)

def th_1_0 = 0.
def th_2_0 = 0. * PI / 4.

def q_1_0 = (cos (th_1_0 / 2.), 0., sin (th_1_0 / 2.), 0.)
def q_2_0 = (cos (th_2_0 / 2.), 0., sin (th_2_0 / 2.), 0.)

def model = {
  body m I world f_2;
  gravity m world f_2;
  sphericalJoint world f_1;
  rigidArm (-1., 0., 0.) world f_1 f_2;
  sphericalJoint f_2 f_3;
  rigidArm (-1., 0., 0.) world f_3 f_4;
  body m I world f_4;
  gravity m world f_4
}

def main = { elaborateToFile (equationsElement model) }
// def _ = dprintln (elaborateWithSubstitutions model)
