/*
   Modeling Kernel Language (Modelyze) library
   Copyright (C) 2010-2012 David Broman

   Modelyze library is free software: you can redistribute it and/or modify
   it under the terms of the GNU Lesser General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   Modelyze library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public License
   along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

Author: Oscar Eriksson oerikss@kth.se
 */

include NewHybridModeling

// Test fixtures
def yy = Array.make 3 0.
def yp = Array.make 3 0.
def roots = Array.make 2 0.
def x, y, z: Signal
def _ = Array.set yy 0 1.
def _ = Array.set yy 1 2.
def _ = Array.set yy 2 3.
def _ = Array.set yp 0 4.
def _ = Array.set yp 1 5.
def _ = Array.set yp 2 6.
def _ = Array.set roots 1 (-1.)
def ukm: UkMap = Map.add z (2, false) (Map.add y (1, false) (Map.add x (0, false) (Map.empty)))
def zcm: ZcMap = Map.add (x + 1.) (-1, false) (Map.add (z + 3.) (-1, false) (Map.empty))

// Tests
def testLabelZcs() = {
  def label = "label zc";
  def _ = println("test: " ++ label);
  def (m, l) = labelZcs zcm;
  def _ = dprint(m);
  def _ = dprint(l);
  println("end test: " ++ label ++ "\n")
}

def testMakeRootFuns() = {
  def label = "MakeRootFuns";
  def _ = println("test: " ++ label);
  def (_, l) = labelZcs zcm;
  def f = (makeRootFuns l ukm);
  def _ = dprint(f);
  println("end test: " ++ label ++ "\n");
}

def testZeroCrossing() = {
  def label = "ZeroCrossing";
  def _ = println("test: " ++ label);
  def (m, l) = labelZcs zcm;
  def _ = dprint(l);
  def _ = dprint(map l (fun x: ZeroCrossing -> (zeroCrossing x m roots)));
  println("end test: " ++ label ++ "\n");
}

// Runner
def main = {
  def _ = testLabelZcs();
  def _ = testMakeRootFuns();
  def _ = testZeroCrossing();
  println("=== EOT ===")
}
