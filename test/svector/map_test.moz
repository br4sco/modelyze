/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se
*/

include Vector

def r: Real
def v_1, v_2, v_3: Vector
def s = listToSet [v_1]

def f(v: Vector) -> Vector = {
  if seq v v_2 then v_2 else v_3 + v_2
}

def ff(v: Vector) -> Vector = {
  if (Set.mem v s) then v_1 else v
}

def _ = dprint(map f (10. *. v_1 + (v_1 + v_2)))
def _ = dprint(map f (10. *. v_1 - (v_1 + ((12. + r) *. v_3))))
def _ = dprint(map ff (10. *. v_1 + (v_1 + v_2)))
def _ = dprint(map ff (10. *. v_1 - (v_1 + ((12. + r) *. v_3))))
def _ = dprint(map ff ((r + 1.) *. v_2 + (r - 2.) *. v_1))
