/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se
*/

include Vector

def x, y: Real
def ii, jj, kk: Vector
def f(v: Vector) -> MatrixMapSReal = {
  if seq v ii then listToMatrix [[1.], [0.]] (mmSRealZero (2, 1))
  else if seq v jj then listToMatrix [[0.], [1.]] (mmSRealZero (2, 1))
  else if seq v kk then listToMatrix [[cos y], [sin x]] (mmSRealZero (2, 1))
  else error "undefined"
}

def _ = dp (vectorToMatrix f ii)
def _ = dp (vectorToMatrix f ((x + y) *. ii))
def _ = dp (vectorToMatrix f (x *. ii))
def _ = dp (vectorToMatrix f (der ii))
def _ = dp (vectorToMatrix f ((2. + 1.) *. ii))
def _ = dp (vectorToMatrix f ((2. + 1.) *. ii + x *. jj + y *. kk + (x + y') *. ii))
