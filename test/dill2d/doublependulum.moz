include DILL2DV
include DILLEXPORT

def gn, n_1, n_2, n_3, n_4: Node

def th_0 = 0.
def m = 1.
def I = 1.
def l = 2.
def w = l / 15.

def x_m1, y_m1, th_m1: Real
def rr_m1 = vec x_m1 y_m1

def x_rj1, y_rj1, th_rj1: Real
def rr_rj1 = vec x_rj1 y_rj1

def x_m2, y_m2, th_m2: Real
def rr_m2 = vec x_m2 y_m2

def x_rj2, y_rj2, th_rj2: Real
def rr_rj2 = vec x_rj2 y_rj2

def joint_1 = modelObj2D (mkComponent RevoluteJoint rr_rj1 th_rj1 gn n_1)
              ++ visualObj2D rr_rj1 th_rj1 (circle w) (stdMaterial RED 1.)

def arm_1 = modelObj2D (SolidArmP l m I rr_m1 th_m1 gn n_1 n_2)
            ++ visualObj2D rr_m1 th_m1 (rectangle w l) (stdMaterial GREEN 1.)

def joint_2 = modelObj2D (mkComponent RevoluteJoint n_2 n_3)
              ++ modelObj2D (mkComponent AcrossSensor rr_rj2 th_rj2 gn n_2)
              ++ visualObj2D rr_rj2 th_rj2 (circle w) (stdMaterial RED 1.)

def arm_2 = modelObj2D (SolidArmP l m I rr_m2 th_m2 gn n_3 n_4)
            ++ visualObj2D rr_m2 th_m2 (rectangle w l) (stdMaterial GREEN 1.)

def p = joint_1 ++ arm_1 ++ joint_2 ++ arm_2

def main = {
  elaborateToFile p
}
