include DILLSIM

def n_1, n_2, n_3: Node

def t: Real
def t_0 = 0.

def m = 1.
def I = 1.
def x_m, y_m: Real
def vx_m, vy_m: Real
def ax_m, ay_m: Real
def Fx_m, Fy_m: Real
def th_m, om_m, al_m, T_m: Real
def rr_m = vec x_m y_m
def vv_m = vec vx_m vy_m
def aa_m = vec ax_m ay_m
def FF_m = vec Fx_m Fy_m

def b = Body m I rr_m vv_m aa_m FF_m th_m om_m al_m T_m n_1 n_2

def x_h, y_h: Real
def vx_h, vy_h: Real
def ax_h, ay_h: Real
def Fx_h, Fy_h: Real
def th_h, om_h, al_h, T_h: Real
def rr_h = vec x_h y_h
def vv_h = vec vx_h vy_h
def aa_h = vec ax_h ay_h
def FF_h = vec Fx_h Fy_h
def f = t * t
def dft = 2. * t
def dftt = 2.

def aa = AngularActuator f dft dftt rr_h vv_h aa_h FF_h th_h om_h al_h T_h n_1 n_2

def l = 1.
def x_r1, y_r1: Real
def vx_r1, vy_r1: Real
def ax_r1, ay_r1: Real
def Fx_r1, Fy_r1: Real
def th_r1, om_r1, al_r1, T_r1: Real
def th_r2, om_r2, al_r2, T_r2: Real
def rr_r1 = vec x_r1 y_r1
def vv_r1 = vec vx_r1 vy_r1
def aa_r1 = vec ax_r1 ay_r1
def FF_r1 = vec Fx_r1 Fy_r1

def ra = RigidArm l rr_r1 vv_r1 aa_r1 FF_r1 th_r1 om_r1 al_r1 T_r1 th_r2 om_r2 al_r2 T_r2 n_1 n_2 n_3

def c = Clock t_0 t
def m = b; aa; ra; c; x_m <- 1.; ax_m <- (-2.)

def main = {
  def lbls = [(x_m, "x"), (y_m, "y"), (vx_m, "vx"), (vy_m, "vy"), (th_m, "th"), (T_m, "T")];
  simulate m (0., 5.) 0.01 lbls
}
