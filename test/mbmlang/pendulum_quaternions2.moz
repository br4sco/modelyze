include MBMLANG

def r_m, v_m, F_m, om_m, T_m: Vector3
def q_m: Quaternion

def r_g, F_g: Vector3

def r_h, F_h: Vector3

def r_r1, F_r1, om_r2, T_r2: Vector3
def q_r2: Quaternion

def model = {
  r_m' == v_m;
  v_m' == F_m;
  om_m' == T_m;
  q_m' ==. 0.5 * (q_ om_m) * q_m;
  F_g == 9.81 * jj;
  r_h == zero3;
  r_r1 == L q_r2 (vec3 (-1.) 0. (-1.));
  q_r2' ==. 0.5 * (q_ om_r2) * q_r2;
  T_r2 == cross (-r_r1) F_r1;

  r_m == r_h + r_r1;
  r_m == r_g;
  F_r1 == F_g + F_m;
  om_r2 == om_m;
  T_m == T_r2;

  norm2 q_m ~= 1.;
  norm2 q_r2 ~= 1.
}

def main = { elaborateToFile (equationsElement model) }
