include ExportModelica2

def om_x, om_y, om_z: Real
def om = vec3 om_x om_y om_z
def rr_r1: Vector3

def q: Quaternion

def r = vec3 (-1.) 0. (-1.)
def rr = qim (qprod q (qprod (pquat r) (qconj q)))

def t_1 = cross rr_r1 (cross (om') rr_r1)
def t_2 = cross rr_r1 (cross om (cross om rr_r1))
def t_3 = cross rr_r1 (9.81 * jj)

def model = {
  rr_r1 == rr;
  qder q ==. qprod (pquat (0.5 * om)) q;
  om' == -t_1 -t_2 - t_3;
  qnorm q ~= 1.
}

def _ = export2ModelicaFile "Test" model
// def _ = dprintln (toScalarEquations (toVector3Equations model))
