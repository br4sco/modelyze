include Pendulum_Common

def fi, th, ps: Real
def om_x, om_y, om_z: Real

def gg = mkVector(0., -9.81, 0.)
def om = mkVector(0., 0., om_z)
def dom = mkVector(0., 0., om_z')
def dth = mkVector(0., 0., th')
def R = R_z(th)
def r = mkVector((-1.), 0., 0.)
def rr = R * r

def t_1 = skewsym rr * (skewsym dom * rr)
def t_2 = skewsym rr * (skewsym om * (skewsym om * rr))
def t_3 = skewsym rr * gg

def model = [
  // dom + t_1 + t_2 - t_3,
  // dth - om
  skewsym rr
]

// def model = [
//   listToMatrix [
//     [om_z' * 2. + cos th * 9.81],
//     [th' - om_z]
//   ] (mmSRealZero (2, 1))
// ]

def _ = iter (fun M: MatrixMapSReal -> def _ = dp M; ()) model

// def rs = concat (concat (map (fun M: MatrixMapSReal -> matrixToList M) model))
// def _ = writeFile MODEL_FILENAME (exportModelica "Pendulum" rs (listToMap []))
// def _ = println (exportMatlab2 rs)
