/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se
*/

include PlanarMech
include Simulation

def n_1, n_2: Node
def t: Real
def t_0 = 0.
def f = sin t
def f_0 = sin t_0
def fp_0 = cos t_0

def vx_m, vy_m, o_m, x_m, y_m, t_m, Fx_m, Fy_m, T_m: Real
// def vxvyo_m = mkZeroInitPlanarInitVars (vx_m, vy_m, o_m)
def vxvyo_m = ((vx_m, 0.), (vy_m, 0.), (o_m, fp_0))
def rxryt_m = mkZeroInitPlanarInitVars (x_m, y_m, t_m)
def FxFyT_m = mkZeroInitPlanarInitVars (Fx_m, Fy_m, T_m)

def pb = PlanarBody 1. 1. vxvyo_m rxryt_m FxFyT_m (n_1, n_2)
def rd = RotationalDrive f f_0 fp_0 (n_1, n_2)

def model =  append pb rd

def main = {
  def res = mkResiduals model;
  def ivs = mkInitVals model;
  def lbls = [(x_m, "x_m"), (y_m, "y_m"), (t_m, "t_m"), (t, "t")];
  def m = mkHModel res ivs;
  def c = Clock t_0 t;
  simulate (m ++ c) (0., 10.) 0.01 lbls
}
