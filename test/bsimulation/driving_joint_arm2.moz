/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se
*/

include PlanarMech
include Simulation
include Matlab

def n_1, n_2, n_3: Node
def t: Real
def t_0 = 0.
def f = t
def f_0 = t_0
def fp_0 = 1.
def l = 1.

def vx_m,
    vy_m,
    o_m,
    rx_m,
    ry_m,
    t_m,
    Fx_m,
    Fy_m,
    T_m: Real

def vxvyo_m = ((vx_m, - fp_0 * l * sin f_0), (vy_m, fp_0 * l * cos f_0), (o_m, fp_0))
def rxryt_m = ((rx_m, l * cos f_0), (ry_m, l * sin f_0), (t_m, f_0))
def FxFyT_m = ((Fx_m, - fp_0 * l * cos f_0), (Fy_m, fp_0 * l * sin f_0), (T_m, 0.))

def rd = RotationalDrive f f_0 fp_0 (n_1, n_2)
def pa = PlanarArm l f_0 fp_0 n_1 n_2 n_3
def pb = PlanarBody 1. 1. vxvyo_m rxryt_m FxFyT_m (n_1, n_3)
def model =  concat [pa, rd, pb]

def main = {
  def res = mkResiduals model;
  def ivs = mkInitVals model;
  def lbls = [(rx_m, "x_m"),
              (ry_m, "y_m"),
              (t_m, "t_m"),
              (vx_m, "vx_m"),
              (vy_m, "vy_m"),
              (o_m, "o_m"),
              (Fx_m, "Fx_m"),
              (Fy_m, "Fy_m"),
              (T_m, "T_m")];
  def m = mkHModel res ivs;
  def c = Clock t_0 t;
  simulate (m ++ c) (0., 10.) 0.01 lbls
}
