/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se
*/

include PlanarMech
include Simulation
include Matlab

def n_1, n_2, n_3: Node
def t: Real
def t_0 = 0.
def f = t
def f_0 = t_0
def fp_0 = 1.
def l = 1.

def vx_r1,
    vy_r1,
    o_r1,
    rx_r1,
    ry_r1,
    t_r1,
    Fx_r1,
    Fy_r1,
    T_r1: Real

def vx_r2,
    vy_r2,
    o_r2,
    rx_r2,
    ry_r2,
    t_r2,
    Fx_r2,
    Fy_r2,
    T_r2: Real

def vxvyo_r1 = ((vx_r1, 0.), (vy_r1, 0.), (o_r1, fp_0))
def rxryt_r1 = ((rx_r1, l * cos f_0), (ry_r1, l * sin f_0), (t_r1, f_0))
def FxFyT_r1 = ((Fx_r1, 0.), (Fy_r1, 0.), (T_r1, 0.))

def vxvyo_r2 = ((vx_r2, 0.), (vy_r2, 0.), (o_r2, fp_0))
def rxryt_r2 = ((rx_r2, 0.), (ry_r2, 0.), (t_r2, f_0))
def FxFyT_r2 = ((Fx_r2, 0.), (Fy_r2, 0.), (T_r2, 0.))

def rd = RotationalDrive f f_0 fp_0 (n_1, n_2)
def pa = PlanarArm l vxvyo_r1 rxryt_r1 FxFyT_r1 vxvyo_r2 rxryt_r2 FxFyT_r2 n_1 n_2 n_3
def model =  append pa rd

def main = {
  def res = mkResiduals model;
  def ivs = mkInitVals model;
  def lbls = [(rx_r1, "x_r1"), (ry_r1, "y_r1"), (rx_r2, "x_r2"), (ry_r2, "y_r2"), (t_r2, "t_r2"), (t, "t")];
  def m = mkHModel res ivs;
  def c = Clock t_0 t;
  simulate (m ++ c) (0., 10.) 0.01 lbls
}
