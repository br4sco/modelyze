/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se
*/

include EquationsFormulation

def i_V, u_V, i_R, u_R, i_L, u_L, V: Vector
def R, L: Real
def n1, n2, n3: Node

def C = [
          (n1, n2, i_V, u_V),
          (n2, n3, i_R, u_R),
          (n3, n1, i_L, u_L)
        ]

def terminals = listToMap [
                            (u_V, V),
                            (u_R, R * i_R),
                            (i_R, (1./ R) * u_R),
                            (u_L, L * der i_L)
                          ]

def main = {
  def (A, B, tv, av) = buildMatrices C;
  def _ = dprint(pp A);
  def _ = dprint(pp B);
  def _ = dprint(tv);
  def _ = dprint(av);
  def ct = vectorize (buildChordTransMap A tv);
  def bt = vectorize (buildBranchTransMap B av);
  def _ = dprint(ct);
  def _ = dprint(bt);
  def _ = dprint(terminals);
  def _ = eqGen tv av terminals (union ct bt);
  ()
}
