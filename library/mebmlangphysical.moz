/*
   Modeling Kernel Language (Modelyze) library
   Copyright (C) 2010-2012 David Broman

   Modelyze library is free software: you can redistribute it and/or modify
   it under the terms of the GNU Lesser General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   Modelyze library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public License
   along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

   written by Oscar Eriksson oerikss@kth.se
 */

include MEBMLANGDefs

type Signal = <Real>
type Time = <Real>

type Electrical
type Voltage = <Real>
type Current = <Real>

type Rotational
type AngularVelocity = <Real>
type Torque = <Real>

def ThroughSensor(t: <Real>, p: Dyn, n: Dyn) = {
  def a_S: <Real>;
  Branch t a_S p n;
  a_S = 0.
}

def AcrossSensor(a: <Real>, p: Dyn, n: Dyn) = {
  def t_S: <Real>;
  Branch t_S a p n;
  t_S = 0.
}

def Clock(t_0: Real, t: Time) = {
  init t t_0;
  der t = 1.
}

def StepSignal(t0: Real, t: Time, s: Signal) = {
  sw (s = 0.) (fun a: () -> s = 1.) (t < t0)
}
