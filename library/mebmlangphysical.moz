/*
   Modeling Kernel Language (Modelyze) library
   Copyright (C) 2010-2012 David Broman

   Modelyze library is free software: you can redistribute it and/or modify
   it under the terms of the GNU Lesser General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   Modelyze library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public License
   along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

   written by Oscar Eriksson oerikss@kth.se
 */

include Physical
include MEBMLANG

type AngularVelocity = <Real>
type Torque = <Real>

def FlowSensor(f: <Real>, p: Dyn, n: Dyn) = {
  def e: <Real>;
  Branch f e p n;
  e = 0.
}

def EffortSensor(e: <Real>, p: Dyn, n: Dyn) = {
  def f: <Real>;
  Branch f e p n;
  f = 0.
}

def SafeSwitch(m_1: Equations, m_2: (() -> ?), r: [<Real>],
  m_3: (() -> ?), lr: [<Real>]) -> Equations = {

  switch (switch m_1 m_2 r) m_3 lr
}

// def ImpulseSwitch(m_1: Equations, m_2: Equations, m_3: Equations, I: [<Real>]) = {
//   def d: <Real>;
//   init d 1.;
//   der d = 0.;
//   switch
//     (m_1, reinit d 1.)
//     (fun t: () ->
//       reinit d 0.
//       switch
//         (m_2)
//         (fun t: () -> m_3)
//         ([d])
//     )
//     (I)
// }
