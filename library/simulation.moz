/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se
*/

include EquationsFormulation
include DILL

def zimulate(res: [Res], ivs: [IVal], lbs: [Label], I: Interval, h: Real) = {
  def f(a: Equations, r: Res) -> Equations = {
    a; r = 0.
  };

  def ff(a: HModel, iv: IVal) -> HModel = {
    a ++ init (fst iv) (snd iv)
  };

  def eqs = foldLeft f (hd res) res;
  def ukm = makeUkMap eqs;
  def flbs = filter (fun l: Label -> Map.mem (fst l) ukm) lbs;
  def fivs = filter (fun iv: IVal -> Map.mem (fst iv) ukm) ivs;
  def hm = foldLeft ff (eqs_and_edges eqs) fivs;
  hm
  // simulate hm I h flbs 2.9 0.001 false false
}
