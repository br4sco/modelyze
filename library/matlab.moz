/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se
*/

include Equation

def matlabEqs(eqs: Equations) = {
  def workMore(e: <Dyn>) -> () = {
    match e with
    | der e -> { def _ = print" diff("; def _ = workMore e; print ")" }
    | e_1 + e_2 -> { def _ = workMore e_1; def _ = print " + "; workMore e_2 }
    | e_1 - e_2 -> { def _ = workMore e_1; def _ = print " - "; workMore e_2 }
    | e_1 * e_2 -> { def _ = workMore e_1; def _ = print " * "; workMore e_2 }
    | e_1 / e_2 -> { def _ = workMore e_1; def _ = print " / "; workMore e_2 }
    | sin e -> { def _ = print" sin("; def _ = workMore e; print ")" }
    | cos e -> { def _ = print" cos("; def _ = workMore e; print ")" }
    // | --e -> { def _ = print " - "; workMore e }
    | sval r: Real -> print r
    | sym: Real -> { def _ = dprint(e); print("(t)") }
  };

  def work(e: Equations) -> () = {
    match e with
    | e_1 = e_2 -> { def _ = workMore e_1; def _ = print " == "; workMore e_2 }
    | e_1; e_2  -> { def _ = work e_1; def _ = print " "; work e_2 }
  };

  work eqs
}

def matlabVars(eqs: Equations) = {
  def ukm = makeUkMap eqs;
  iter (fun e: (<Real>, (Int, Bool)) -> def _ = dprint(fst e); print("(t) ")) (Map.toList ukm)
}
