/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se
*/

include BasicEqsFormulation

def mkPlanarMechModelEdge(e: Edge, aatt: (ModelVarInit, ModelVarInit), terminal: Res)
  -> VectorModelEdge = {

  def ((aa, _), _) = aatt;
  def x = find (1, 1) aa;
  def y = find (2, 1) aa;
  def t = find (3, 1) aa;
  def u: <Real> = 1.;
  def z: <Real> = 0.;

  def tf(mv: ModelVar) -> ModelVar = {
    def mv = hconcat mv (mmSRealId 1);
    def T = listToMatrix [
                          [cos t, -sin t, z, z],
                          [sin t,  cos t, z, z],
                          [z,      z,     u, z],
                          [z,      z,     z, u]
                         ] (mmSRealZero (4, 4));

    fst (hsplit 3 (T * mv))
  };

  def itf(mv: ModelVar) -> ModelVar = {
    def mv = hconcat mv (mmSRealId 1);
    def T = listToMatrix [
                          [cos t,  sin t, z, z],
                          [-sin t, cos t, z, z],
                          [z,      z,     u, z],
                          [z,      z,     z, u]
                         ] (mmSRealZero (4, 4));

    fst (hsplit 3 (T * mv))
  };

  (e, aatt, terminal, tf, itf)
}
