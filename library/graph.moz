/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se
*/

include Base

type Node
type Edge = (Node, Node)
type AdjList = (Node => [Node])
type Tree = AdjList

// def findPath(T: Tree, s: Node, e: Node) -> [Edge] = {
//   def work(n: Node, v: Set(Node), a: [Edge]) -> [Edge] = {
//     def adj = Map.find n T;
//     if forAll (fun n: Node -> Set.mem n v) adj then a
//     else
//   };
// }
