/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

        Diode-Inductor Circuit


    1 -- TS -- 2 ----------
    |          |          |+
    |          |          L
   +|          |+         |-
    V          D          3
   -|          |-         |+
    |          |          R
    |          |          |-
    -----------4-----------

written by Oscar Eriksson oerikss@kth.se
*/

include MEBMLANGElectrical
include Simulate

def u_L, i_D, i: Real
def u_Dd, i_Dd, u_Ld, i_Ld, u_Rd, i_Rd: Real
def V = 1.
def R = 1.
def L = 1.
def t_break = 3.
def i_L0 = 0.
def fbias = 0.7

//def Ground(n: Electrical) = {
//  def i_G: Current;
//  def u_G: Voltage;
//  RefBranch i_G u_G n;
//  u_G = 0.
//}

def flybackDiode = {
  def n1, n2, n3, n4: Electrical;
  ConstantVoltageSource V n1 n4;
  ResistorDebug R n1 n2 i_Rd u_Rd;
  TimedSwitch true t_break n2 n3;
  InductorDebug L i_L0 n3 n4 i_Ld u_Ld;
  DiodeDebug false fbias n3 n4 i_Dd u_Dd
}

def monitored =
  // [(i_Dd, "i_D"), (u_Dd, "u_D"), (i_Ld, "i_L"), (u_Ld, "u_L"), (u_Rd, "u_R"), (i_Rd, "i_R")]
  //[(i_Dd, "i_D"), (u_Dd, "u_D"), (i_Ld, "i_L"), (u_Ld, "u_L")]
  [(i_Dd, "i_D"), (u_Dd, "u_D")]

// def main =
//   print(pprintSimulation (simulatemebml flybackDiode 0. 0.05 4.35 monitored))

def main =
  print(pprintSimulation (simulatemebmlDebug flybackDiode 0. 0.05 10.35 monitored 100))
