/*
   Modeling Kernel Language (Modelyze) library
   Copyright (C) 2010-2012 David Broman

   Modelyze library is free software: you can redistribute it and/or modify
   it under the terms of the GNU Lesser General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   Modelyze library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public License
   along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

   written by Oscar Eriksson oerikss@kth.se
 */

include OSCSIM

def llog = logger "bounce" TRACE

// Constants
def g = 9.81
def e = 0.7

def freefall(y: <Real>, v: <Real>, a: <Real>) = {
  def _ = llog "In the air!" ();
  der y = v;
  der v = a;
  a = -g
}

def floor(y: <Real>, v: <Real>, a: <Real>) = {
  def _ = llog "On the floor!" ();
  der y = v;
  der v = a;
  v = -e*(pre v)
}

def bb(y: <Real>, v: <Real>, a: <Real>) -> Equations = {
  init y 10.;
  init v 0.;
  sw
    (freefall y v a)
    (
      fun t: () ->
        sw
          (floor y v a)
          (fun t: () -> bb y v a)
          (y < 1.e-5)
    )
    (y > 0.)
}

def main = {
  def y, v, a: Real;
  def monitored = [(y, "y"), (v, "v")
    // ];
    ,(a, "a")];
  def b = bb y v a;
  simulateDebug b 0. 0.01 7.5 monitored
}
