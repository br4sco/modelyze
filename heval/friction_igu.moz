/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se

*/

include IGIVEUP

def y, yx, ay, x, vx, ax: <Real>
def g = 9.81
def mu_s = 0.7
def mu_d = 0.3

def andswitch(A: MModel, b_1: <Real>, b_2: <Real>, B: MModel) = {
  switch (switch A b_2 (fun tnk: () -> B)) b_1 (fun tnk: () -> B)
}

def body = {
  model (
    der y = vy;
    der vy = ay;
    der x = vx;
    der vx = ax
  )
}

def freefall = {
  body ++
  model (
    ay = -g;
    ax = 0
  )
}

def still = {
  body ++
  model (
    vy = 0;
    vx = 0
  )
}

def sliding = {
  switch
    (body ++
    model (
      vy = 0;
      ax = -mu_d * g
    ))
    (vx)
    (fun tnk: () -> still)
}

def slideorstill = {
  andswitch
    (still)
    (-vy)
    (-(mu_s * abs (pre vy - vy) - abs (pre vx - vx)))
    (sliding)
}

def monitored = [(y, "y"), (x, "x")]

def main = {
  simulate m (0.,7.0) 0.1 monitored 2.9 0.001 true false
  }
