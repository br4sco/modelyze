/*
   Modeling Kernel Language (Modelyze) library
   Copyright (C) 2010-2012 David Broman

   Modelyze library is free software: you can redistribute it and/or modify
   it under the terms of the GNU Lesser General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   Modelyze library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public License
   along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

   written by Oscar Eriksson oerikss@kth.se
 */

include MEBMLANGPhysical
include Simulate

def g = 9.81
def mu_s = 0.5
def mu_d = 0.3
def vx0 = 9.
def y0 =  20.
def vx, vy, Ix: Real

def body(x: <Real>, y: <Real>) = {
  // def vx, vy, Ix: Real;

  def ystuck = {
    reinit y 0.; reinit vy 0.; der vy = 0.;
    switch
      (reinit Ix (vx - mu_s*(-vy)))
      (fun t: () -> reinit Ix 0.)
       ([vx])
  };

  def yfall = {
    switch
      (reinit y y; reinit vy vy; der vy = -g)
      (fun t: () -> ystuck)
      ([y])
  };

  def xstuck = { reinit x x; reinit vx 0.; der vx = 0. };

  def xslide = {
    switch
      (reinit x x; reinit vx vx; der vx = (-mu_d)*g)
      (fun t:() -> xstuck)
      ([vx])
  };

  def ximpact = {
    switch
      (xslide)
      (fun t: () -> xstuck)
      ([Ix])
  };

  def xfall = {
    switch
      (reinit x x; reinit vx vx; der vx = 0.)
      (fun t: () -> ximpact)
      ([y])
  };

  init x 0.;
  init y y0;
  init vx vx0;
  init vy 0.;
  init Ix 0.;
  der x = vx;
  der y = vy;
  der Ix = 0.;
  yfall;
  xfall
}


def main =
  def x, y: Real;
  def monitored = [(x, "x"), (y, "y"), (vx, "vx"), (vy, "vy"), (Ix, "Ix")];
  // def monitored = [(Ix, "Ix")];
  print(pprintSimulation (simulatemebmlDebug (body x y) 0. 0.1 6.0 monitored 10))
